openapi: 3.0.0
info:
  title: API de Node MongoDB con Docker
  version: 1.0.0
  description: Esta es una aplicación API simple de CRUD hecha con Express y documentada con Swagger
  contact:
    name: INESDI
    url: https://www.inesdi.com
servers:
  - url: 'http://localhost:3000'
    description: Servidor de Desarrollo
paths:
  /api/items:
    get:
      summary: Obtener todos los ítems
      responses:
        '200':
          description: Lista de ítems
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
    post:
      summary: Crear un nuevo ítem
      description: Crea un nuevo ítem asegurándose de que el correo electrónico sea único. Los campos first_name, email y gender son obligatorios.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: Nombre de la persona.
                  example: "Juan"
                last_name:
                  type: string
                  description: Apellido de la persona, puede ser nulo.
                  example: "Pérez"
                email:
                  type: string
                  description: Correo electrónico, debe ser único.
                  example: "juan.perez@example.com"
                gender:
                  type: string
                  description: Género de la persona.
                  example: "Masculino"
                address:
                  type: object
                  description: Dirección completa de la persona, puede ser nula.
                  properties:
                    city:
                      type: string
                      description: Ciudad
                      example: "Madrid"
                    state:
                      type: string
                      description: Estado o provincia
                      example: "Madrid"
                    country:
                      type: string
                      description: País
                      example: "España"
                    country_code:
                      type: string
                      description: Código del país
                      example: "ES"
                card:
                  type: object
                  description: Información de la tarjeta de crédito, puede ser nula.
                  properties:
                    card_number:
                      type: string
                      description: Número de la tarjeta de crédito.
                      example: "4111111111111111"
                    card_type:
                      type: string
                      description: Tipo de tarjeta.
                      example: "Visa"
                    currency_code:
                      type: string
                      description: Código de moneda.
                      example: "EUR"
                    balance:
                      type: string
                      description: Saldo disponible.
                      example: "1000"
                married_status:
                  type: boolean
                  description: Estado civil, falso por defecto.
                  example: false
              required:
                - first_name
                - email
                - gender
    put:
      summary: Actualizar un ítem basado en el correo electrónico
      description: Actualiza un ítem buscando por el correo electrónico proporcionado. Si no se encuentra un ítem con ese correo, se retorna un error.
      parameters:
        - in: query
          name: email
          schema:
            type: string
          required: true
          description: El correo electrónico del ítem a actualizar.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '200':
          description: El ítem fue actualizado correctamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '404':
          description: No se encontró un ítem con el correo electrónico proporcionado.
        '400':
          description: Falta proporcionar el correo electrónico en la solicitud.
    delete:
      summary: Eliminar ítems por correo electrónico
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
          description: Correo electrónico del ítem a eliminar
      responses:
        '200':
          description: Cantidad de ítems eliminados
          content:
            application/json:
              schema:
                type: object
                properties:
                  deletedCount:
                    type: integer
        '204':
          description: No se encontraron ítems para eliminar con ese correo electrónico
  /api/items/search:
    get:
      summary: Buscar ítems por correo electrónico
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
          description: Correo electrónico del ítem a buscar
      responses:
        '200':
          description: Un arreglo de ítems que coinciden con el correo electrónico proporcionado
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
        '404':
          description: No se encontraron documentos coincidentes con ese correo electrónico
components:
  schemas:
    Item:
      type: object
      required: [first_name, email, gender]
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        gender:
          type: string
        address:
          type: object
          properties:
            city:
              type: string
            state:
              type: string
            country:
              type: string
            country_code:
              type: string
        card:
          type: object
          properties:
            card_number:
              type: string
            card_type:
              type: string
            currency_code:
              type: string
            balance:
              type: string
        married_status:
          type: boolean
